<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:conv="clr-namespace:PonyChallenge.Converters"
             xmlns:skia="clr-namespace:SkiaSharp.Views.Forms;assembly=SkiaSharp.Views.Forms"
             xmlns:fx="clr-namespace:PonyChallenge.Effects"
             BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToPageBackgroundColorConverter}}"
             x:Class="PonyChallenge.Views.NavigateMazePage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <conv:BooleanNegationConverter x:Key="BooleanNegationConverter" />
            <conv:SnappedIntToDoubleConverter x:Key="SnappedIntToDoubleConverter" />
            <conv:MovesPerSecondPowerToSpeedConverter x:Key="MovesPerSecondPowerToSpeedConverter" />
            <conv:PonyToPageBackgroundColorConverter x:Key="PonyToPageBackgroundColorConverter" />
            <conv:PonyToMazeBackgroundColorConverter x:Key="PonyToMazeBackgroundColorConverter" />
            <conv:PonyToWallColorConverter x:Key="PonyToWallColorConverter" />

            <Style x:Key="BaseButtonStyle" TargetType="Button">
                <Setter Property="CornerRadius" Value="1" />
            </Style>

            <Style x:Key="MoveButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
                <Setter Property="Margin" Value="1" />
            </Style>
            
            <Style x:Key="EastWestMoveButtonStyle" TargetType="Button" BasedOn="{StaticResource MoveButtonStyle}">
                <Setter Property="WidthRequest" Value="40" />
                <Setter Property="VerticalOptions" Value="Fill" />
                <Setter Property="HorizontalOptions" Value="Center" />
            </Style>

            <Style x:Key="NorthSouthMoveButtonStyle" TargetType="Button" BasedOn="{StaticResource MoveButtonStyle}">
                <Setter Property="HeightRequest" Value="40" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="HorizontalOptions" Value="Fill" />
            </Style>

            <Style x:Key="RunButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
                <Setter Property="HorizontalOptions" Value="FillAndExpand" />
            </Style>

            <Style x:Key="QuitButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
                <Setter Property="HorizontalOptions" Value="Start" />
            </Style>

            <Style x:Key="SkiaCanvasViewStyle" TargetType="skia:SKCanvasView">
                <Setter Property="HorizontalOptions" Value="Fill" />
                <Setter Property="VerticalOptions" Value="Fill" />
            </Style>

            <Style x:Key="BottomRowStackLayoutStyle" TargetType="StackLayout">
                <Setter Property="Orientation" Value="Horizontal" />
                <Setter Property="Margin" Value="3, 0, 3, 3" />
            </Style>

            <Style x:Key="SpeedSliderStackLayoutStyle" TargetType="StackLayout">
                <Setter Property="Orientation" Value="Vertical" />
                <Setter Property="Spacing" Value="0" />
            </Style>

            <Style x:Key="ControlStackLayoutStyle" TargetType="StackLayout">
                <Setter Property="HorizontalOptions" Value="Center" />
            </Style>

            <Style x:Key="FullWidthControlStackLayoutStyle" TargetType="StackLayout" BasedOn="{StaticResource ControlStackLayoutStyle}">
                <Setter Property="Padding" Value="4" />
            </Style>

            <Style x:Key="PonyNameStackLayoutStyle" TargetType="StackLayout" BasedOn="{StaticResource FullWidthControlStackLayoutStyle}">
                <Setter Property="WidthRequest" Value="220" />
            </Style>

            <Style x:Key="ControlLabelStyle" TargetType="Label">
                <Setter Property="HorizontalOptions" Value="Center" />
            </Style>
            
            <Style x:Key="SpeedSliderLabelStyle" TargetType="Label" BasedOn="{StaticResource ControlLabelStyle}">
                <Setter Property="FontSize" Value="9" />
            </Style>

            <Style x:Key="PonyNamePickerStyle" TargetType="Picker">
                <Setter Property="WidthRequest" Value="180" />
            </Style>
            
            <Style x:Key="BaseSliderStyle" TargetType="Slider">
                <Setter Property="MinimumTrackColor" Value="Black" />
                <Setter Property="MaximumTrackColor" Value="#202020" />
            </Style>

            <Style x:Key="DimensionSelectionSliderStyle" TargetType="Slider" BasedOn="{StaticResource BaseSliderStyle}">
                <Setter Property="WidthRequest" Value="100" />
            </Style>

            <Style x:Key="DifficultySelectionSliderStyle" TargetType="Slider" BasedOn="{StaticResource BaseSliderStyle}">
                <Setter Property="WidthRequest" Value="150" />
            </Style>

            <Style x:Key="MazeDefinitionOuterFrameStyle" TargetType="Frame">
                <Setter Property="BackgroundColor" Value="#60A0A0A0" />
            </Style>
            
            <Style x:Key="MazeDefinitionInnerFrameStyle" TargetType="Frame">
                <Setter Property="CornerRadius" Value="0" />
                <Setter Property="BackgroundColor" Value="#E0E0E0E0" />
                <Setter Property="WidthRequest" Value="220" />
                <Setter Property="HorizontalOptions" Value="Center" />
                <Setter Property="VerticalOptions" Value="Center" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Padding>
        <OnPlatform x:TypeArguments="Thickness">
            <On Platform="iOS" Value="0, 20, 0, 0" />
        </OnPlatform>
    </ContentPage.Padding>
    <ContentPage.Content>
        <Grid VerticalOptions="Fill" HorizontalOptions="Fill">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid ColumnSpacing="0" RowSpacing="0" Grid.Row="0" Margin="3, 3, 3, 0" HorizontalOptions="Fill" VerticalOptions="Fill">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Button Grid.Row="0" Grid.Column="1" Text="N" Command="{Binding MoveDirectionCommand}" CommandParameter="0" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" BorderColor="{Binding SelectedPonyName, Converter={StaticResource PonyToWallColorConverter}}" Style="{StaticResource NorthSouthMoveButtonStyle}"/>
                <Button Grid.Row="1" Grid.Column="0" Text="W" Command="{Binding MoveDirectionCommand}" CommandParameter="3" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" BorderColor="{Binding SelectedPonyName, Converter={StaticResource PonyToWallColorConverter}}" Style="{StaticResource EastWestMoveButtonStyle}"/>
                <Button Grid.Row="1" Grid.Column="2" Text="E" Command="{Binding MoveDirectionCommand}" CommandParameter="1" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" BorderColor="{Binding SelectedPonyName, Converter={StaticResource PonyToWallColorConverter}}" Style="{StaticResource EastWestMoveButtonStyle}" />
                <Button Grid.Row="2" Grid.Column="1" Text="S" Command="{Binding MoveDirectionCommand}" CommandParameter="2" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" BorderColor="{Binding SelectedPonyName, Converter={StaticResource PonyToWallColorConverter}}" Style="{StaticResource NorthSouthMoveButtonStyle}"/>
                <Grid Padding="3" Grid.Row="1" Grid.Column="1" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" HorizontalOptions="Fill" VerticalOptions="Fill" >
                    <skia:SKCanvasView x:Name="MazeCanvas" Style="{StaticResource SkiaCanvasViewStyle}" PaintSurface="OnMazeCanvasPaintSurface" />
                    <skia:SKCanvasView x:Name="CreatureCanvas" Style="{StaticResource SkiaCanvasViewStyle}" PaintSurface="OnCreatureCanvasPaintSurface">
                        <skia:SKCanvasView.GestureRecognizers>
                            <SwipeGestureRecognizer Direction="Up" Command="{Binding MoveDirectionCommand}" CommandParameter="0" />
                            <SwipeGestureRecognizer Direction="Left" Command="{Binding MoveDirectionCommand}" CommandParameter="3" />
                            <SwipeGestureRecognizer Direction="Right" Command="{Binding MoveDirectionCommand}" CommandParameter="1" />
                            <SwipeGestureRecognizer Direction="Down" Command="{Binding MoveDirectionCommand}" CommandParameter="2" />
                        </skia:SKCanvasView.GestureRecognizers>
                    </skia:SKCanvasView>
                </Grid>
            </Grid>
            <StackLayout Grid.Row="1" IsVisible="{Binding HasSnapshot}" Style="{StaticResource BottomRowStackLayoutStyle}">
                <Button Style="{StaticResource QuitButtonStyle}" Text="Quit Maze" Clicked="QuitButton_Clicked" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" BorderColor="{Binding SelectedPonyName, Converter={StaticResource PonyToWallColorConverter}}"/>
                <Button Style="{StaticResource RunButtonStyle}" Text="Run &amp; Stop" Command="{Binding MakeAutoMoveCommand}" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" BorderColor="{Binding SelectedPonyName, Converter={StaticResource PonyToWallColorConverter}}"/>
                <Button Style="{StaticResource RunButtonStyle}" Text="Run Like The Wind" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" Command="{Binding SwitchRepeatAutoMoveCommand}" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" BorderColor="{Binding SelectedPonyName, Converter={StaticResource PonyToWallColorConverter}}"/>
                <Button Style="{StaticResource RunButtonStyle}" Text="Stop Running" IsVisible="{Binding MakeRepeatingAutoMoves}" Command="{Binding SwitchRepeatAutoMoveCommand}" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" BorderColor="{Binding SelectedPonyName, Converter={StaticResource PonyToWallColorConverter}}"/>
                <StackLayout Style="{StaticResource SpeedSliderStackLayoutStyle}">
                    <Label Text="{Binding MovesPerSecondPower, Converter={StaticResource MovesPerSecondPowerToSpeedConverter}}" Style="{StaticResource SpeedSliderLabelStyle}"/>
                    <Slider Maximum="3" Minimum="-1" Value="{Binding MovesPerSecondPower, Mode=TwoWay, Converter={StaticResource SnappedIntToDoubleConverter}}" Style="{StaticResource BaseSliderStyle}">
                        <Slider.Effects>
                            <fx:ThumbToolTipEffect Suppressed="True" />
                        </Slider.Effects>
                    </Slider>
                </StackLayout>
            </StackLayout>
            
            <Frame Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Style="{StaticResource MazeDefinitionOuterFrameStyle}" IsVisible="{Binding HasSnapshot, Converter={StaticResource BooleanNegationConverter}}">
                <Frame OutlineColor="{Binding SelectedPonyName, Converter={StaticResource PonyToPageBackgroundColorConverter}}" Style="{StaticResource MazeDefinitionInnerFrameStyle}" >
                    <ScrollView>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ActivityIndicator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="4" IsVisible="{Binding IsBusy}" IsRunning="{Binding IsBusy}" HorizontalOptions="Fill" VerticalOptions="Fill" />
                            <StackLayout Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource PonyNameStackLayoutStyle}">
                                <Label Text="Player Name" Style="{StaticResource ControlLabelStyle}"/>
                                <Picker ItemsSource="{Binding PonyNames}" SelectedItem="{Binding SelectedPonyName, Mode=TwoWay}" Style="{StaticResource PonyNamePickerStyle}" />
                            </StackLayout>
                            <StackLayout Grid.Row="1" Grid.Column="0" Style="{StaticResource ControlStackLayoutStyle}">
                                <Label Text="Width" Style="{StaticResource ControlLabelStyle}"/>
                                <Label Text="{Binding Width, Mode=OneWay}" Style="{StaticResource ControlLabelStyle}"/>
                                <Slider Maximum="25" Minimum="15" Value="{Binding Width, Mode=TwoWay, Converter={StaticResource SnappedIntToDoubleConverter}}" Style="{StaticResource DimensionSelectionSliderStyle}"/>
                            </StackLayout>
                            <StackLayout Grid.Row="1" Grid.Column="1" Style="{StaticResource ControlStackLayoutStyle}">
                                <Label Text="Height" Style="{StaticResource ControlLabelStyle}"/>
                                <Label Text="{Binding Height, Mode=OneWay}" Style="{StaticResource ControlLabelStyle}"/>
                                <Slider Maximum="25" Minimum="15" Value="{Binding Height, Mode=TwoWay, Converter={StaticResource SnappedIntToDoubleConverter}}" Style="{StaticResource DimensionSelectionSliderStyle}"/>
                            </StackLayout>
                            <StackLayout Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource FullWidthControlStackLayoutStyle}">
                                <Label Text="Difficulty" Style="{StaticResource ControlLabelStyle}"/>
                                <Label Text="{Binding Difficulty}" Style="{StaticResource ControlLabelStyle}"/>
                                <Slider Maximum="10" Minimum="0" Value="{Binding Difficulty, Mode=TwoWay, Converter={StaticResource SnappedIntToDoubleConverter}}" Style="{StaticResource DifficultySelectionSliderStyle}"/>
                            </StackLayout>
                            <Button Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding CreateMazeCommand}" Text="A-Maze-Me!" HorizontalOptions="Center" Margin="0, 6, 0, 4" />
                        </Grid>
                    </ScrollView>
                </Frame> 
            </Frame>
        </Grid>
    </ContentPage.Content>
</ContentPage>