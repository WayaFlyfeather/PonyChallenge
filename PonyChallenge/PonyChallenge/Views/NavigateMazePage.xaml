<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:conv="clr-namespace:PonyChallenge.Converters"
             xmlns:skia="clr-namespace:SkiaSharp.Views.Forms;assembly=SkiaSharp.Views.Forms"
             BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToPageBackgroundColorConverter}}"
             x:Class="PonyChallenge.Views.NavigateMazePage">
    <ContentPage.Resources>
        <ResourceDictionary>
            <conv:BooleanNegationConverter x:Key="BooleanNegationConverter" />
            <conv:MovesPerSecondPowerToSpeedConverter x:Key="MovesPerSecondPowerToSpeedConverter" />
            <conv:PonyToPageBackgroundColorConverter x:Key="PonyToPageBackgroundColorConverter" />
            <conv:PonyToMazeBackgroundColorConverter x:Key="PonyToMazeBackgroundColorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid VerticalOptions="Fill">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" Grid.Column="0" Text="MazeID" />
            <Label Grid.Row="0" Grid.Column="1" Text="{Binding Model.Id}" />
            <Label Grid.Row="1" Grid.Column="0" Text="Specs" />
            <Label Grid.Row="1" Grid.Column="1" Text="{Binding Specs}" />
            <Grid ColumnSpacing="0" RowSpacing="0" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" HorizontalOptions="Fill" VerticalOptions="Fill">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="9*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="9*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Row="0" Grid.Column="1" Text="N" Command="{Binding MoveDirectionCommand}" CommandParameter="0" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" HorizontalOptions="Fill" VerticalOptions="Fill" />
                <Button Grid.Row="1" Grid.Column="0" Text="W" Command="{Binding MoveDirectionCommand}" CommandParameter="3" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" HorizontalOptions="Fill" VerticalOptions="Fill" />
                <Button Grid.Row="1" Grid.Column="2" Text="E" Command="{Binding MoveDirectionCommand}" CommandParameter="1" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" HorizontalOptions="Fill" VerticalOptions="Fill" />
                <Button Grid.Row="2" Grid.Column="1" Text="S" Command="{Binding MoveDirectionCommand}" CommandParameter="2" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" HorizontalOptions="Fill" VerticalOptions="Fill" />
                <Grid Padding="3" Grid.Row="1" Grid.Column="1" BackgroundColor="{Binding SelectedPonyName, Converter={StaticResource PonyToMazeBackgroundColorConverter}}" HorizontalOptions="Fill" VerticalOptions="Fill" >
                    <skia:SKCanvasView x:Name="MazeCanvas" HorizontalOptions="Fill" VerticalOptions="Fill" PaintSurface="OnMazeCanvasPaintSurface" />
                    <skia:SKCanvasView x:Name="CreatureCanvas" HorizontalOptions="Fill" VerticalOptions="Fill" PaintSurface="OnCreatureCanvasPaintSurface" />
                </Grid>
            </Grid>
            <!--<Frame Padding="0" OutlineColor="Black" CornerRadius="0" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" HorizontalOptions="Fill" VerticalOptions="Fill" Margin="3"  BackgroundColor="LightGray">
                <StackLayout x:Name="TheMaze" Spacing="0" HorizontalOptions="Fill" VerticalOptions="Fill" />
            </Frame>-->
            <Button Grid.Row="3" Grid.Column="0" HorizontalOptions="Fill" Text="Single Auto Move" Command="{Binding MakeAutoMoveCommand}" IsVisible="{Binding HasSnapshot}" />
            <StackLayout Orientation="Horizontal" Grid.Row="3" Grid.Column="1" IsVisible="{Binding HasSnapshot}">
                <Button HorizontalOptions="FillAndExpand" Text="Repeat Auto Move" IsVisible="{Binding MakeRepeatingAutoMoves, Converter={StaticResource BooleanNegationConverter}}" Command="{Binding SwitchRepeatAutoMoveCommand}" />
                <Button HorizontalOptions="FillAndExpand" Text="Stop Repeat Auto Move" IsVisible="{Binding MakeRepeatingAutoMoves}" Command="{Binding SwitchRepeatAutoMoveCommand}" />
                <StackLayout Spacing="0">
                    <Label Text="{Binding MovesPerSecondPower, Converter={StaticResource MovesPerSecondPowerToSpeedConverter}}" FontSize="9"  HorizontalOptions="Center" />
                    <Stepper Minimum="-1" Maximum="3" Value="{Binding MovesPerSecondPower}" />
                </StackLayout>
            </StackLayout>
            
            <Frame Grid.Row="0" Grid.Column="0" Grid.RowSpan="4" Grid.ColumnSpan="2" BackgroundColor="#60A0A0A0" IsVisible="{Binding HasSnapshot, Converter={StaticResource BooleanNegationConverter}}">
                <Frame OutlineColor="{Binding SelectedPonyName, Converter={StaticResource PonyToPageBackgroundColorConverter}}" CornerRadius="0" BackgroundColor="#40FFFFFF" HorizontalOptions="Center" VerticalOptions="Center">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <StackLayout Grid.Row="0 " Grid.Column="0" HorizontalOptions="Center">
                            <Label Text="Width" HorizontalOptions="Center" />
                            <Label Text="{Binding Width, Mode=OneWay}" HorizontalOptions="Center" />
                            <Stepper Maximum="25" Minimum="15" Increment="1" Value="{Binding Width, Mode=TwoWay}" HorizontalOptions="Center" />
                        </StackLayout>
                        <StackLayout Grid.Row="0" Grid.Column="1" HorizontalOptions="Center">
                            <Label Text="Height" HorizontalOptions="Center" />
                            <Label Text="{Binding Height, Mode=OneWay}" HorizontalOptions="Center"/>
                            <Stepper Maximum="25" Minimum="15" Increment="1" Value="{Binding Height, Mode=TwoWay}" HorizontalOptions="Center"/>
                        </StackLayout>
                        <StackLayout Grid.Row="1" Grid.Column="0" Padding="4">
                            <Label Text="Player Name" />
                            <Picker ItemsSource="{Binding PonyNames}" SelectedItem="{Binding SelectedPonyName, Mode=TwoWay}" />
                        </StackLayout>
                        <StackLayout Grid.Row="1" Grid.Column="1" Padding="4">
                            <Label Text="Difficulty" />
                            <Picker ItemsSource="{Binding Difficulties}" SelectedItem="{Binding SelectedDifficulty, Mode=TwoWay}" />
                        </StackLayout>
                        <Button Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Command="{Binding CreateMazeCommand}" Margin="4" Text="Create Maze" HorizontalOptions="Center" />
                    </Grid>
                </Frame> 
            </Frame>
        </Grid>
    </ContentPage.Content>
</ContentPage>